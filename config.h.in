/** \file config.h
    \brief Defines Mujin Vision Controller Client installation-specific information.
*/
#ifndef MUJINVISIONCONTROLLERCLIENT_DEFINITIONS_H
#define MUJINVISIONCONTROLLERCLIENT_DEFINITIONS_H

#if defined(_WIN32) || defined(__CYGWIN__) || defined(_MSC_VER)
  #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_IMPORT __declspec(dllimport)
  #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_EXPORT __declspec(dllexport)
  #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_LOCAL
#else
  #if __GNUC__ >= 4
    #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_IMPORT __attribute__ ((visibility("default")))
    #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_EXPORT __attribute__ ((visibility("default")))
    #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_LOCAL  __attribute__ ((visibility("hidden")))
  #else
    #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_IMPORT
    #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_EXPORT
    #define MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_LOCAL
  #endif
#endif

// Now we use the generic helper definitions above to define MUJINVISIONCONTROLLERCLIENT_API and MUJINVISIONCONTROLLERCLIENT_LOCAL.
// MUJINVISIONCONTROLLERCLIENT_API is used for the public API symbols. It either DLL imports or DLL exports (or does nothing for static build)
// MUJINVISIONCONTROLLERCLIENT_LOCAL is used for non-api symbols.
#if defined(MUJINVISIONCONTROLLERCLIENT_DLL) || defined(MUJINVISIONCONTROLLERCLIENT_CORE_DLL) // defined if OpenRAVE is compiled as a DLL
  #ifdef MUJINVISIONCONTROLLERCLIENT_DLL_EXPORTS // defined if we are building the OpenRAVE DLL (instead of using it)
    #define MUJINVISIONCONTROLLERCLIENT_API MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_EXPORT
  #else
    #define MUJINVISIONCONTROLLERCLIENT_API MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_IMPORT
  #endif // MUJINVISIONCONTROLLERCLIENT_DLL_EXPORTS
  #define MUJINVISIONCONTROLLERCLIENT_LOCAL MUJINVISIONCONTROLLERCLIENT_HELPER_DLL_LOCAL
#else // MUJINVISIONCONTROLLERCLIENT_DLL is not defined: this means OpenRAVE is a static lib.
  #define MUJINVISIONCONTROLLERCLIENT_API
  #define MUJINVISIONCONTROLLERCLIENT_LOCAL
#endif // MUJINVISIONCONTROLLERCLIENT_DLL

#define MUJINVISIONCONTROLLERCLIENT_VERSION_MAJOR @MUJINVISIONCONTROLLERCLIENT_VERSION_MAJOR@
#define MUJINVISIONCONTROLLERCLIENT_VERSION_MINOR @MUJINVISIONCONTROLLERCLIENT_VERSION_MINOR@
#define MUJINVISIONCONTROLLERCLIENT_VERSION_PATCH @MUJINVISIONCONTROLLERCLIENT_VERSION_PATCH@
#define MUJINVISIONCONTROLLERCLIENT_VERSION_COMBINED(major, minor, patch) (((major) << 16) | ((minor) << 8) | (patch))
#define MUJINVISIONCONTROLLERCLIENT_VERSION MUJINVISIONCONTROLLERCLIENT_VERSION_COMBINED(MUJINVISIONCONTROLLERCLIENT_VERSION_MAJOR, MUJINVISIONCONTROLLERCLIENT_VERSION_MINOR, MUJINVISIONCONTROLLERCLIENT_VERSION_PATCH)
#define MUJINVISIONCONTROLLERCLIENT_VERSION_EXTRACT_MAJOR(version) (((version)>>16)&0xff)
#define MUJINVISIONCONTROLLERCLIENT_VERSION_EXTRACT_MINOR(version) (((version)>>8)&0xff)
#define MUJINVISIONCONTROLLERCLIENT_VERSION_EXTRACT_PATCH(version) (((version))&0xff)
#define MUJINVISIONCONTROLLERCLIENT_VERSION_STRING "@MUJINVISIONCONTROLLERCLIENT_VERSION_MAJOR@.@MUJINVISIONCONTROLLERCLIENT_VERSION_MINOR@.@MUJINVISIONCONTROLLERCLIENT_VERSION_PATCH@"
#define MUJINVISIONCONTROLLERCLIENT_VERSION_STRING_FORMAT(version) boost::str(boost::format("%s.%s.%s")%(MUJINVISIONCONTROLLERCLIENT_VERSION_EXTRACT_MAJOR(version))%(MUJINVISIONCONTROLLERCLIENT_VERSION_EXTRACT_MINOR(version))%(MUJINVISIONCONTROLLERCLIENT_VERSION_EXTRACT_PATCH(version)))

#define MUJINVISIONCONTROLLERCLIENT_VERSION_GE(major1, minor1, patch1, major2, minor2, patch2) (MUJINVISIONCONTROLLERCLIENT_VERSION_COMBINED(major1, minor1, patch1) >= MUJINVISIONCONTROLLERCLIENT_VERSION_COMBINED(major2, minor2, patch2))
#define MUJINVISIONCONTROLLERCLIENT_VERSION_MINIMUM(major, minor, patch) MUJINVISIONCONTROLLERCLIENT_VERSION_GE(MUJINVISIONCONTROLLERCLIENT_VERSION_MAJOR, MUJINVISIONCONTROLLERCLIENT_VERSION_MINOR, MUJINVISIONCONTROLLERCLIENT_VERSION_PATCH, major, minor, patch)

#endif
