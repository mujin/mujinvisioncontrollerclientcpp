info:
  description: The API of the Mujin vision client. Used for client generation.
include:
- mujinrepo:mujinvisionmanager.schema.visionTaskParametersSchema
- mujinrepo:mujinvisionmanager.schema.sensorSelectionInfosSchema
- mujinrepo:mujinvisionmanager.schema.detectionParametersSchema
- mujinrepo:mujinvisionmanager.schema.pointCloudFilteringParametersSchema
- mujinrepo:mujincommon.schema.profileMapSchema
- components.yaml
mujinapi: 0.0.1
services:
  # GetPublishedState: {}  # Subscription
  GetPublishedStateService:  # Config
    usesConfigSocket: true
  Ping:  # Config
    usesConfigSocket: true
  SetLogLevel:  # Config
    description: Sets the log level for the visionmanager.
    usesConfigSocket: true
    parameters:
      componentLevels:
        isRequired: true
        type: object
        description: A dictionary of component names and their respective log levels.
  Cancel:
    description: Cancels the current command.
    usesConfigSocket: true
    parameters: {}
  Quit:
    description: Quits the visionmanager.
    usesConfigSocket: true
    parameters: {}
  GetTaskStateService:
    description: Gets the task state of the visionmanager.
    usesConfigSocket: true
    parameters:
      cycleIndex:
        $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
      taskId:
        type: string
        description: If specified, the taskId to retrieve the detected objects from.
      taskType:
          description: the taskType for which the status was requested
          type: string
    returns:
      type: object
      properties:
        taskParameters:
          description: describes the task specific parameters if present, eg. detection params, execution verification params..
          type: object
        initializeTaskMS:
          description: timestamp at which the task was received and initialized , in ms (linux epoch)
          type: integer
        isStopTask:
          description: True if task is currently running
          type: boolean
        scenepk:
          description: scene file name
          type: string
        taskId:
          description: The taskId for which the status was requested
          type: string
        taskStatus:
          description: status of the task
          type: string
        taskStatusMessage:
          description: describes the task status
          type: string
        taskType:
          $merge: '#/components/taskType'
          description: The task type for which the status was requested
  GetVisionStatistics:
    description: Gets the latest vision stats.
    parameters:
      cycleIndex:
        $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
      taskId:
        type: string
        description: If specified, the taskId.
      taskType:
        $merge: '#/components/taskType'
    returns:
      type: object
      description: a list of all currently active vision task statistics. Each task statistics have the following structure
      properties:
        cycleIndex:
          $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
        taskId:
          type: string
          description: The taskId.
        taskType:
          $merge: '#/components/taskType'
        taskStartTimeMS:
          type: integer
        totalDetectionTimeMS:
          type: integer
        totalDetectionCount:
          type: integer
        totalGetImagesCount:
          type: integer
        targetURIs:
          type: integer
        detectionHistory:
          type: array
  GetLatestDetectedObjects:
    description: Gets the latest detected objects.
    parameters:
      cycleIndex:
        $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
      taskId:
        type: string
        description: If specified, the taskId to retrieve the detected objects from.
      taskType:
        $merge: '#/components/taskType'
        description: The task type to retrieve the detected objects from.
    returns:
      type: object
      description: a list of the latest detection results, having the structure
      properties:
        cycleIndex:
          $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
        detectedObjects:
          type: array
        detectionResultState:
          type: object
        imageEndTimeStampMS:
          type: integer
        imageStartTimestampMS:
          type: integer
        locationName:
          type: string
        pointCloudId:
          type: string
        resultTimestampMS:
          type: integer
        sensorSelectionInfos:
          type: array
        statsUID:
          type: string
        targetUpdateName:
          type: string
        taskId:
          type: string
  GetLatestDetectionResultImages:
    description: Gets the latest detected result images.
    parameters:
      newerThanResultTimestampMS:
        type: integer
        default: 0
        description: If specified, starttimestamp of the image must be newer than this value in milliseconds.
      metadataOnly:
        type: bool
        default: False
        description: 'Default: False'
      imageTypes:
        type: array # Each programming language will have to specify its way of saying "image type"
        description: Mujin image types
      limit:
        type: integer
      sensorSelectionInfo:
        type: object
      taskId:
        type: string
        description: If specified, the taskId.
      taskType:
        $merge: '#/components/taskType'
      cycleIndex:
        $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
    returns:
      type: string
      description: Raw image data
  GetDetectionHistory:
    description: Gets detection result with given timestamp (sensor time)
    parameters:
      timestamp:
        isRequired: true
        type: integer
        description: Unix timestamp in milliseconds
    returns:
      type: string
      description: Binary blob of detection data
  BackupDetectionLog:
    description: Backs up the vision log for a given cycle index
    parameters:
      cycleIndex:
        required: true
        $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
      sensorTimestamps:
        type: array
        description: The sensor timestamps to backup
        items:
          type: number
  StopTask:
    description: Stops a set of tasks that meet the filter criteria
    parameters:
      taskTypes:
        type: array
        description: If specified, a list of task types to stop.
        items:
          $merge: '#/components/taskType'
      waitForStop:
        type: bool
        description: If True, then wait for task to stop, otherwise just trigger it to stop, but do not wait
      removeTask:
        type: bool
        description: If True, then remove the task from being tracked by the vision manager and destroy all its resources. Will wait for the task to end before returning.
      taskId:
        type: string
        description: If specified, the specific taskId to stop
      taskType:
        $merge: '#/components/taskType'
        description: The task type to stop.
      cycleIndex:
        $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
    returns:
      type: object
      properties:
        isStopped:
          type: boolean
          description: true, if the specific taskId or set of tasks with a specific taskType(s) is stopped
  ResumeTask:
    description: Resumes a set of tasks that meet the filter criteria
    parameters:
      taskTypes:
        type: array
        description: If specified, a list of task types to resume
        items:
          type: string
      waitForStop:
        type: bool
        description: DEPRECATED. This is unused.
      taskId:
        type: string
        description: If specified, the specific taskId to resume
      taskType:
        $merge: '#/components/taskType'
        description: The task type to resume.
      cycleIndex:
        $merge: '#/mujinvisionmanager.schema.detectionParametersSchema/detectionParametersSchema/properties/cycleIndex'
    returns:
      type: object
      properties:
        taskIds:
          type: array
          description: List of taskIds that have been resumed
          items:
            type: string
  StartObjectDetectionTask:
    description: Starts detection thread to continuously detect objects. the vision server will send detection results directly to mujin controller.
    parameters:
      systemState:
        $merge: '#/mujincommon.schema.profileMapSchema/profileSelectorSchema'
        isRequired: false
    returns:
      type: object
      properties:
        taskId:
          type: string
          description: The taskId of the created task
  StartContainerDetectionTask:
    description: Starts container detection thread to continuously detect a container. the vision server will send detection results directly to mujin controller.
    parameters:
      systemState:
        $merge: '#/mujincommon.schema.profileMapSchema/profileSelectorSchema'
        isRequired: false
    returns:
      type: object
      properties:
        taskId:
          type: string
          description: The taskId of the created task
  StartVisualizePointCloudTask:
    description: Start point cloud visualization thread to sync camera info from the mujin controller and send the raw camera point clouds to mujin controller
    parameters:
      systemState:
        $merge: '#/mujincommon.schema.profileMapSchema/profileSelectorSchema'
        isRequired: false
    returns:
      type: object
      properties:
        taskId:
          type: string
          description: The taskId of the created task
